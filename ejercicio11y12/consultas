11) Crear un stored procedure que sirva para agregar una reparación, junto con una revisión de un empleado
(REVISIONREPARACION) y un repuesto (REPUESTOREPARACION) relacionados dentro de una sola
transacción. El stored procedure debe recibir los siguientes parámetros: dniCliente, codSucursal,
fechaReparacion, cantDiasReparacion, telefonoReparacion, empleadoReparacion, repuestoReparacion.

Como hacer si un repuesto tiene 2 emppleados para reparacion(revisionreparacion).
por ejemplo :
call store_(1009443,100,2013-12-14 12:20:31,‘Maidana’,‘bomba de combustible’,4,4243-4255)
call store_(1009443,100,2013-12-14 12:20:31,‘Juan’,‘bomba de combustible’,4,4243-4255)

o en el caso de que un cliente tenga 2 repuestos, y 2 empleados para reparacion, serian la combinacion de todos ellos y llamar al SP por cada uno ( 4 llamadas )

DELIMITER $$
create PROCEDURE `revision_repuesto`(
	in P_dniCliente int(11),
	in P_codSucursal int(11), 
	in P_fechaReparacion datetime, 
	in P_cantDiasReparacion int(11),
	in P_telefonoReparacion varchar(45),
	in P_empleadoReparacion varchar(30),
	in P_repuestoReparacion varchar(30)
)
BEGIN
	declare dir varchar(255);
	declare ciudad varchar(255);
	declare tarjeta varchar(255);
	/* verificar que hace esto */
	select C.domicilioCliente, C.ciudadCliente, C.tarjetaPrimaria into dir, ciudad, tarjeta 
	from reparacion.cliente as C 
	where C.dniCliente = P_dnicliente;
	

	start transaction;
		insert into reparacion.reparacion (`codSucursal`,`dniCliente`,`fechaInicioReparacion`, `cantDiasReparacion`,
		 `telefonoReparacionCliente`, `direccionReparacionCliente`, `ciudadReparacionCliente`, `tarjetaReparacion`) 
		values (P_codSucursal, P_dnicliente, P_fechaReparacion, P_cantDiasReparacion,
		P_telefonoReparacion, dir, ciudad, tarjeta);

		insert into reparacion.repuestoreparacion (`dniCliente`, `fechaInicioReparacion`, `repuestoReparacion`)
		values (P_dniCliente, P_fechaReparacion, P_repuestoReparacion);

		insert into reparacion.revisionreparacion (`dniCliente`, `fechaInicioReparacion`, `empleadoReparacion`) 
		values (P_dniCliente, P_fechaReparacion, P_empleadoReparacion);
	commit; 
END $$
Delimiter ;


-- ====================================================================================


12) Ejecutar el stored procedure del punto 11 con los siguientes datos:
dniCliente: 1009443
codSucursal: 100
fechaReparacion: 2013-12-14 12:20:31
empleadoReparacion: ‘Maidana’
repuestoReparacion: ‘bomba de combustible’
cantDiasReparacion: 4
telefonoReparacion: 4243-4255

call revision_repuesto(1009443,100, '2013-12-14 12:20:31' , 4 ,'4243-4255', 'Maidana','bomba de combustible')


Cuando se hacen pruebas, utilizar estos metodos para dejar como estaba. ( si pusimos el trigger del ejer. 10 )


delete from reparacion where dniCliente = 1009443 and fechaInicioReparacion = '2013-12-14 12:20:31';
delete from revisionreparacion where dniCliente = 1009443 and fechaInicioReparacion = '2013-12-14 12:20:31';
delete from repuestoreparacion where dniCliente = 1009443 and fechaInicioReparacion = '2013-12-14 12:20:31';
update reparacion.reparacionesporcliente set cantidadReparaciones = 2 where dniCliente = 1009443 and fechaInicioReparacion = '2013-12-14 12:20:31'